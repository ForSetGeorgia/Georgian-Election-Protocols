##############################################################
# whenever you see this block,                               #
#  there is a setting you need to update                     #
##############################################################


##############################################################
# upstream unicorn_XXX = unique name of the upstream
#    - IMPORTANT - do not use '.' in name
# server unix:/tmp/unicorn_XXX = use same name as upstream
#    - IMPORTANT - must match what is in the app's unicorn.rb file
##############################################################
upstream unicorn_Protocols {
  server unix:/tmp/unicorn_Protocols.sock fail_timeout=0;
}


server {
  listen 80;
  listen [::]:80;

  ##############################################################
  # server_name = url to the app
  # root = path to the application public folder
  ##############################################################
  server_name protocols.electionsportal.ge protocols.forset.ge protocols.jumpstart.ge;
  root /home/deploy/Protocols/current/public;

  ##############################################################
  # this app does a lot of data upload processing that takes a long time
  # set this value to equal the value in the unicorn.rb file
  ##############################################################
  proxy_read_timeout 30;
  proxy_send_timeout 30;

  ###########################################
  ###########################################
  #### the following settings are taken from https://gist.github.com/plentz/6737338 & https://mattbrictson.com/a-better-way-to-ssl

  # do not send the nginx version number in error pages and Server header
  server_tokens off;

  # control buffer overflow attacks
  # https://www.acunetix.com/blog/articles/nginx-server-security-hardening-configuration-1/
  client_body_buffer_size 10k;
  client_max_body_size 50m;
  ###########################################
  # if you are using oauth you will need to increase these to something like 4 and 8k
  ###########################################
  client_header_buffer_size 8k;
  large_client_header_buffers 4 8k;

  # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
  # to disable content-type sniffing on some browsers.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
  # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
  # "soon" on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
  add_header X-Content-Type-Options nosniff;

  # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
  # It is usually enabled by default anyway, so the role of this header is to re-enable the filter for
  # this particular website if it was disabled by the user.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header X-XSS-Protection "1; mode=block";

  ###########################################
  ###########################################

  # set timeouts to improve performance
  # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;

  # allow nginx to zip files to reduce bandwidth
  # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  gzip             on;
  gzip_comp_level  2;
  gzip_min_length  500;
  gzip_proxied     expired no-cache no-store private auth;
  gzip_types       text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml font/opentype;
  gzip_vary        on;

  location ~ ^/(assets|images|javascripts|stylesheets|system)/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  ##############################################################
  # the following is used to show a maintenance page
  ##############################################################
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ \.(php|html)$ {
    return 405;
  }


  ##############################################################
  # the following is to allow letsencrypt access to certs
  ##############################################################
  location ~ /.well-known {
    allow all;
  }


  ##############################################################
  # @unicorn_XXX = must be the name of the upstream created at the very top
  ##############################################################
  try_files $uri/index.html $uri @unicorn_Protocols;
  location @unicorn_Protocols {
    ##############################################################
    # the following is used to show a maintenance page
    # - simply rename the file maintenance_disable.html to maintenance.html
    #   and this will work
    ##############################################################
    if (-f $document_root/maintenance.html) {
      return 503;
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_redirect off;

    ##############################################################
    # http://unicorn_XXX = must be the name of the upstream created at the very top
    ##############################################################
    proxy_pass http://unicorn_Protocols;
  }
}
